name: Build Resume PDF and Deploy to Pages

on:
  push:
    branches:
      - main
    paths:
      - "README.md"
      - ".github/workflows/build-resume.yml"
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    container:
      image: pandoc/latex:latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install emoji-capable fonts
        run: |
          apt-get update
          apt-get install -y --no-install-recommends fonts-noto-color-emoji fonts-dejavu
          fc-cache -f

      - name: Set Current Date
        id: date
        run: echo "DATE_SUFFIX=$(date +'%m_%d_%Y')" >> $GITHUB_ENV

      - name: Convert Markdown to PDF
        run: |
          PDF_FILENAME="JP_Silva_Resume_${{ env.DATE_SUFFIX }}.pdf"
          echo "Generated PDF Filename: $PDF_FILENAME"
          pandoc README.md -o "$PDF_FILENAME" \
            --pdf-engine=xelatex \
            --variable=mainfont:"DejaVu Sans" \
            --variable=monofont:"DejaVu Sans Mono" \
            --variable=fontsize:10pt \
            --metadata-file=README.md
          echo "PDF_ARTIFACT_NAME=$PDF_FILENAME" >> $GITHUB_ENV

      - name: Upload PDF as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf-${{ env.DATE_SUFFIX }}
          path: ${{ env.PDF_ARTIFACT_NAME }}
          retention-days: 90

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Prepare Pages Artifact
        run: |
          DEPLOY_DIR="_artifact_to_deploy"
          PAGES_FILENAME="JP_Silva_Resume.pdf"
            mkdir -p "$DEPLOY_DIR"
          cp "${{ env.PDF_ARTIFACT_NAME }}" "$DEPLOY_DIR/$PAGES_FILENAME"
          echo "PDF_PAGES_DEPLOY_PATH=$DEPLOY_DIR" >> $GITHUB_ENV
          echo "Deploying $PAGES_FILENAME from $DEPLOY_DIR to GitHub Pages"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PDF_PAGES_DEPLOY_PATH }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Log GitHub Pages URL
        if: success() && steps.deployment.outputs.page_url != ''
        run: |
          echo "PDF successfully deployed to GitHub Pages."
          echo "Access it at: ${{ steps.deployment.outputs.page_url }}JP_Silva_Resume.pdf"
